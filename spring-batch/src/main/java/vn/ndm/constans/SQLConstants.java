package vn.ndm.constans;

public enum SQLConstants {
    // SQL lấy ra all bảng của schemal
    TABLE("table_name","SELECT TABLE_NAME FROM ALL_TABLES WHERE OWNER = ?"),
    VIEW("view_name","SELECT VIEW_NAME, DBMS_METADATA.GET_DDL('VIEW', VIEW_NAME)  AS DDL FROM USER_VIEWS"),
    INDEX("index_name","SELECT INDEX_NAME, DBMS_METADATA.GET_DDL('INDEX', INDEX_NAME)  AS DDL FROM USER_INDEXES"),
    PACKAGE("object_name","SELECT OBJECT_NAME, DBMS_METADATA.GET_DDL('PACKAGE', OBJECT_NAME) AS DDL FROM USER_OBJECTS WHERE OBJECT_TYPE = 'PACKAGE'"),
    FUNCTION("object_name","SELECT OBJECT_NAME, DBMS_METADATA.GET_DDL('FUNCTION', OBJECT_NAME) AS DDL FROM USER_OBJECTS WHERE OBJECT_TYPE = 'FUNCTION'"),
    PROCEDURE("object_name","SELECT OBJECT_NAME, DBMS_METADATA.GET_DDL('PROCEDURE', OBJECT_NAME) AS DDL FROM USER_OBJECTS WHERE OBJECT_TYPE = 'PROCEDURE'"),
    SEQUENCE("sequence_name","SELECT SEQUENCE_NAME, DBMS_METADATA.GET_DDL('SEQUENCE', SEQUENCE_NAME) AS DDL FROM USER_SEQUENCES"),
    TRIGGER("trigger_name","SELECT TRIGGER_NAME, DBMS_METADATA.GET_DDL('TRIGGER', TRIGGER_NAME) AS DDL FROM USER_TRIGGERS"),
    JOB("job_name","SELECT JOB_NAME, DBMS_METADATA.GET_DDL('PROCOBJ', JOB_NAME) AS DDL FROM USER_SCHEDULER_JOBS"),
    DBMS_JOB("USER_SCHEDULER_JOBS","SELECT JOB, DBMS_METADATA.GET_DDL('PROCOBJ', JOB, 'JOB') AS DDL FROM USER_SCHEDULER_JOBS"),
    QUEUE_TABLE("queue_table","SELECT QUEUE_TABLE, DBMS_METADATA.GET_DDL('QUEUE_TABLE', QUEUE_TABLE) AS DDL FROM USER_QUEUE_TABLES"),
    QUEUE("queue_name","SELECT QUEUE_NAME, DBMS_METADATA.GET_DDL('QUEUE', QUEUE_NAME) AS DDL FROM USER_QUEUES"),
    COLUMN_TABLE("TABLE_NAME","SELECT COLUMN_NAME FROM ALL_TAB_COLUMNS WHERE TABLE_NAME = ? AND OWNER = ?"),
    COUNT_TABLE("ALL_TABLES","SELECT COUNT(*)  AS TABLE_COUNT FROM ALL_TABLES WHERE OWNER = ?");

    private final String sql;
    private final String column;

    SQLConstants(String key, String sql) {
        this.sql = sql;
        this.column = key;
    }

    public String getSql() {
        return sql;
    }

    public String getColumn() {
        return column;
    }
}
